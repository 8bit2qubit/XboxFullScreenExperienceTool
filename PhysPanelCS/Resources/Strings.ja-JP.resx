<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Description" xml:space="preserve">
    <value>PhysPanelCS {0} - Windows 内部ディスプレイ物理サイズツール</value>
  </data>
  <data name="Usage" xml:space="preserve">
    <value>使用法: PhysPanelCS &lt;コマンド&gt; [パラメータ...]</value>
  </data>
  <data name="Commands" xml:space="preserve">
    <value>コマンド:</value>
  </data>
  <data name="GetDescription" xml:space="preserve">
    <value>  get               現在の物理サイズ設定を取得します。</value>
  </data>
  <data name="SetDescription" xml:space="preserve">
    <value>  set &lt;幅&gt; &lt;高さ&gt;     新しい物理サイズを設定します (単位: mm)。</value>
  </data>
  <data name="Examples" xml:space="preserve">
    <value>例:</value>
  </data>
  <data name="GetExample" xml:space="preserve">
    <value>  PhysPanelCS get</value>
  </data>
  <data name="SetExample" xml:space="preserve">
    <value>  PhysPanelCS set 155 87</value>
  </data>
  <data name="ErrorUnknownCommand" xml:space="preserve">
    <value>エラー: 不明なコマンド '{0}'</value>
  </data>
  <data name="ErrorGetFailed" xml:space="preserve">
    <value>エラー: ディスプレイサイズを取得できませんでした。</value>
  </data>
  <data name="CurrentSize" xml:space="preserve">
    <value>現在のサイズ: {0}x{1}mm ({2:F2}インチ)</value>
  </data>
  <data name="ErrorSetInvalid" xml:space="preserve">
    <value>エラー: 'set' コマンドのパラメータ形式が正しくありません。</value>
  </data>
  <data name="ErrorSetFailed" xml:space="preserve">
    <value>エラー: ディスプレイサイズを設定できませんでした。この操作にはSYSTEMユーザー権限が必要です。</value>
  </data>
  <data name="SetSuccess" xml:space="preserve">
    <value>設定に成功しました。</value>
  </data>
  <data name="UnknownVersion" xml:space="preserve">
    <value>不明なバージョン</value>
  </data>
  <data name="AttemptingStartKeyboard" xml:space="preserve">
    <value>タッチキーボードを起動しようとしています...</value>
  </data>
  <data name="KeyboardStartCommandSuccess" xml:space="preserve">
    <value>キーボードの起動コマンドは正常に送信されました。</value>
  </data>
  <data name="ErrorFailedToStartKeyboard" xml:space="preserve">
    <value>エラー: キーボードの起動に失敗しました。詳細: {0}</value>
  </data>
  <data name="StartKeyboardDescription" xml:space="preserve">
    <value>  startkeyboard          Windows タッチキーボードを起動または切り替えます。</value>
  </data>
  <data name="StartKeyboardExample" xml:space="preserve">
    <value>  PhysPanelCS.exe startkeyboard</value>
  </data>
  <data name="ErrorNtStatusErrorCode" xml:space="preserve">
    <value>   NTSTATUS エラーコード: 0x{0:X8}</value>
  </data>
  <data name="ErrorTabTipNotFound" xml:space="preserve">
    <value>エラー: 予期されたパスにタッチキーボードの実行可能ファイル (TabTip.exe) が見つかりませんでした。</value>
  </data>
  <data name="ErrorTabTipActivationFailed" xml:space="preserve">
    <value>エラー: タッチキーボードの有効化、通信、または非表示に失敗しました。デスクトップ環境の読み込みが遅い場合、システムの起動中にこの問題が発生することがあります。</value>
  </data>
</root>